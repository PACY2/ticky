// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())

  name     String
  email    String @unique
  password String
  phone    String @unique
  address  String
  
  verifiedAt DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  Complain Complain[]
  Order    Order[]

  role   Role @relation(fields: [roleId], references: [id], onDelete: Cascade)
  roleId Int

  refreshTokens RefreshToken[]

  @@map("users")
}

model RefreshToken {
  id Int @id @default(autoincrement())

  token String @unique()

  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int

  @@map("refreshTokens")
}

model Role {
  id Int @id @default(autoincrement())

  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  User      User[]

  @@map("roles")
}

model Service {
  id Int @id @default(autoincrement())

  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  Order     Order[]

  @@map("services")
}

model Complain {
  id Int @id @default(autoincrement())

  description String  @db.LongText
  goal        String
  closed      Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  order   Order @relation(fields: [orderId], references: [id])
  orderId Int

  user   User @relation(fields: [userId], references: [id])
  userId Int

  complainNature   ComplainNature @relation(fields: [complainNatureId], references: [id], onDelete: Cascade)
  complainNatureId Int

  @@map("complaints")
}

model ComplainNature {
  id Int @id @default(autoincrement())

  name      String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now()) @updatedAt
  Complain  Complain[]

  @@map("complainNatures")
}

model Order {
  id Int @id @default(autoincrement())

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  Complain Complain[]

  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int

  service   Service @relation(fields: [serviceId], references: [id], onDelete: Cascade)
  serviceId Int

  @@map("orders")
}
